--[[


 ██████   █████  ██    ██ ██   ██ 
██    ██ ██   ██ ██    ██ ██  ██  
██    ██ ███████ ██    ██ █████   
██ ▄▄ ██ ██   ██  ██  ██  ██  ██  
 ██████  ██   ██   ████   ██   ██ 
    ▀▀                            
                                  

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then v19=v0(v3(v20,1,1));return "";else local v76=v2(v0(v20,16));if v19 then local v79=v5(v76,v19);v19=nil;return v79;else return v76;end end end);local function v21(v22,v23,v24)if v24 then local v77=(v22/((1067 -(1061 + 4))^(v23-(1 + 0))))%((6 -4)^(((v24-(1408 -(88 + 1319))) -(v23-(1 + (0 -0)))) + (1 -0)));return v77-(v77%(606 -(239 + 366)));else local v78=((2 + 0) -0)^(v23-(357 -((17 -11) + 350)));return (((v22%(v78 + v78))>=v78) and (1 -0)) or (0 + 0);end end local function v25()local v38=0 + 0;local v39;while true do if ((1799 -(983 + 816))==v38) then v39=v1(v16,v18,v18);v18=v18 + (2 -(2 -1));v38=1368 -(1140 + 227);end if ((4 -3)==v38) then return v39;end end end local function v26()local v40=0 + 0;local v41;local v42;while true do if (v40==(0 + 0)) then v41,v42=v1(v16,v18,v18 + 1 + 1);v18=v18 + (2 -(0 -0));v40=1 + 0;end if (v40==(2 -1)) then return (v42 * 256) + v41;end end end local function v27()local v43,v44,v45,v46=v1(v16,v18,v18 + 2 + 1);v18=v18 + 4 + 0;return (v46 * 16777216) + (v45 * (66035 -(108 + 391))) + (v44 * 256) + v43;end local function v28()local v47=241 -(158 + 83);local v48;local v49;local v50;local v51;local v52;local v53;while true do if (v47==0) then v48=v27();v49=v27();v47=1 + 0 + 0;end if (v47==3) then if (v52==(591 -(327 + 264))) then if (v51==(0 -0)) then return v53 * 0;else local v96=0 -0;while true do if ((42 -(33 + 9))==v96) then v52=1;v50=(542 + 14) -(460 + 96);break;end end end elseif (v52==((956 + 2307) -(689 + 527))) then return ((v51==(0 -0)) and (v53 * ((1 + 0)/((5443 -3511) -(1706 + 226))))) or (v53 * NaN);end return v8(v53,v52-(2193 -(1063 + 107))) * (v50 + (v51/((4 -(2 -0))^52)));end if (v47==((2810 -(71 + 849)) -(584 + 1305))) then v50=852 -(514 + 337);v51=(v21(v49,1 + 0,(110 + 419) -(449 + 60)) * ((8 -6)^((90 -37) -21))) + v48;v47=2 -0;end if (v47==(7 -(1019 -(467 + 547)))) then v52=v21(v49,1006 -(70 + 2 + (2804 -1891)),26 + (1492 -(41 + 1446)));v53=((v21(v49,3 + 29)==(733 -(23 + 709))) and  -(450 -(169 + 280))) or 1;v47=3;end end end local function v29(v30)local v54=(1314 -(1074 + 240)) -0;local v55;local v56;while true do if (v54==(1697 -(515 + 1181))) then v55=v3(v16,v18,(v18 + v30) -(1597 -(678 + 918)));v18=v18 + v30;v54=1 + 1;end if (v54==(1 + 2)) then return v6(v56);end if (v54==(0 + 0)) then v55=nil;if  not v30 then v30=v27();if (v30==(0 + 0)) then return "";end end v54=3 -2;end if (v54==(2 + 0)) then v56={};for v80=1865 -(206 + (3507 -(1141 + 708))), #v55 do v56[v80]=v2(v1(v3(v55,v80,v80)));end v54=50 -(25 + 22);end end end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v57=0;local v58;local v59;local v60;local v61;local v62;local v63;local v64;local v65;local v66;while true do if (v57==(1 -0)) then v60=nil;v61=nil;v57=3 -1;end if (v57==(2 + 0)) then v62=nil;v63=nil;v57=3;end if (v57~=(5 -2)) then else v64=nil;v65=nil;v57=4;end if (0~=v57) then else v58=0;v59=nil;v57=2 -1;end if (v57==(3 + 1)) then v66=nil;while true do if (v58~=(4 + 0)) then else while true do if ((2 + 1)~=v59) then else v66=nil;while true do local v102=1330 -(1068 + 262);local v103;local v104;while true do if (v102==(979 -(531 + 447))) then while true do if (0~=v103) then else v104=632 -(13 + 619);while true do if (v104~=1) then else if (v60~=1) then else local v136=0 + 0;local v137;local v138;while true do if (v136==1) then while true do if (v137==0) then v138=0 + 0;while true do if (1==v138) then for v336=1361 -(417 + 943),v65 do local v337=387 -(354 + 33);local v338;local v339;local v340;while true do if (v337==(1845 -(504 + 1341))) then local v356=0;while true do if (v356==0) then local v376=0;while true do if (v376==0) then v338=0;v339=nil;v376=1;end if (v376~=(4 -3)) then else v356=1;break;end end end if (v356~=(757 -(440 + 316))) then else v337=1;break;end end end if (v337==1) then v340=nil;while true do if ((0 -0)~=v338) then else local v377=0;local v378;local v379;while true do if (v377~=0) then else v378=0 -0;v379=nil;v377=1;end if (v377==1) then while true do if (v378==0) then v379=1592 -(1198 + 394);while true do if (v379~=0) then else v339=v25();v340=nil;v379=2 -1;end if ((2 -1)~=v379) then else v338=796 -(431 + 364);break;end end break;end end break;end end end if (v338==(685 -(536 + 148))) then if (v339==1) then v340=v25()~=0;elseif (v339==2) then v340=v28();elseif (v339~=(14 -11)) then else v340=v29();end v66[v336]=v340;break;end end break;end end end v64[3]=v25();v138=975 -(921 + 52);end if (v138==(810 -(477 + 333))) then local v325=0;while true do if ((1 + 0)==v325) then v138=1 + 0;break;end if (v325==0) then v65=v27();v66={};v325=1;end end end if ((5 -3)==v138) then v60=1 + 1;break;end end break;end end break;end if (v136~=(0 + 0)) then else v137=0;v138=nil;v136=1 + 0;end end end break;end if (v104==(51 -(12 + 39))) then local v107=1085 -(858 + 227);while true do if (v107==1) then v104=1;break;end if (v107~=(0 + 0)) then else if (v60==(1443 -(987 + 454))) then local v237=0 -0;local v238;while true do if (v237==(0 -0)) then v238=0;while true do local v293=0;local v294;while true do if (v293~=0) then else v294=0 -0;while true do if (v294==(0 + 0)) then if (v238==(2 -1)) then local v365=0;while true do if ((0 + 0)==v365) then for v395=1 + 0,v27() do v63[v395]=v27();end return v64;end end end if (v238~=0) then else local v366=0 -0;local v367;while true do if (v366==(0 -0)) then v367=0 -0;while true do if ((1898 -(1413 + 485))==v367) then for v401=1877 -(1331 + 545),v27() do local v402=0;local v403;local v404;local v405;while true do if (v402==0) then v403=0 -0;v404=nil;v402=1 + 0;end if (v402==(1749 -(1575 + 173))) then v405=nil;while true do if (v403==(1 + 0)) then while true do if (v404==(226 -(205 + 21))) then v405=v25();if (v21(v405,1,1 -0)==(0 + 0)) then local v417=0 + 0;local v418;local v419;local v420;local v421;while true do if (v417==(0 -0)) then local v422=0;while true do if (v422==0) then v418=0 + 0;v419=nil;v422=1;end if (v422~=(3 -2)) then else v417=177 -(167 + 9);break;end end end if (v417~=1) then else local v423=0;while true do if (v423~=(809 -(54 + 755))) then else v420=nil;v421=nil;v423=1467 -(594 + 872);end if (v423==1) then v417=204 -(72 + 130);break;end end end if (v417==2) then while true do if (v418==3) then if (v21(v420,3,3)==(1 + 0)) then v421[607 -(226 + 377)]=v66[v421[4]];end v61[v401]=v421;break;end if (v418~=(2 + 0)) then else local v425=0;while true do if (v425~=(0 -0)) then else local v431=0;while true do if (v431==0) then if (v21(v420,1,1)==(3 -2)) then v421[1752 -(1443 + 307)]=v66[v421[1 + 1]];end if (v21(v420,2,2)~=(1887 -(1681 + 205))) then else v421[2 + 1]=v66[v421[3]];end v431=1390 -(854 + 535);end if (1==v431) then v425=1947 -(744 + 1202);break;end end end if (v425==1) then v418=3;break;end end end if (v418==0) then local v426=0;local v427;while true do if (v426~=0) then else v427=0 + 0;while true do if (v427==0) then local v435=0 + 0;while true do if (v435==(0 -0)) then v419=v21(v405,2,2 + 1);v420=v21(v405,4,6);v435=1;end if (v435==1) then v427=1;break;end end end if (v427==(261 -(194 + 66))) then v418=1 + 0;break;end end break;end end end if (v418~=(2 -1)) then else local v428=0;while true do if (v428==(1184 -(398 + 786))) then v421={v26(),v26(),nil,nil};if (v419==(0 + 0)) then local v432=0;local v433;local v434;while true do if (v432==(1766 -(1688 + 77))) then while true do if (v433==(0 + 0)) then v434=0;while true do if (v434~=0) then else v421[3]=v26();v421[561 -(377 + 180)]=v26();break;end end break;end end break;end if (v432==(0 + 0)) then v433=0 -0;v434=nil;v432=1;end end elseif (v419==1) then v421[1 + 2]=v27();elseif (v419==2) then v421[3]=v27() -(2^16);elseif (v419==(8 -5)) then local v442=236 -(14 + 222);local v443;local v444;while true do if (v442==1) then while true do if (v443==(0 + 0)) then v444=0;while true do if (0~=v444) then else v421[3]=v27() -((512 -(440 + 70))^16);v421[2 + 2]=v26();break;end end break;end end break;end if (v442==0) then v443=0;v444=nil;v442=1;end end end v428=4 -3;end if (v428~=(1 + 0)) then else v418=2;break;end end end end break;end end end break;end end break;end if ((0 -0)==v403) then v404=0 -0;v405=nil;v403=1 + 0;end end break;end end end for v406=1 -0,v27() do v62[v406-1]=v33();end v367=1 + 0;end if (v367==1) then v238=94 -(87 + 6);break;end end break;end end end break;end end break;end end end break;end end end if (v60==(0 -0)) then local v239=0;local v240;while true do if (v239~=(1937 -(1353 + 584))) then else v240=0;while true do if (v240~=1) then else v63={};v64={v61,v62,nil,v63};v240=2;end if (v240~=0) then else local v326=0;while true do if (v326==(0 -0)) then v61={};v62={};v326=4 -3;end if (v326==(683 -(144 + 538))) then v240=1 + 0;break;end end end if ((1520 -(524 + 994))~=v240) then else v60=1;break;end end break;end end end v107=1;end end end end break;end end break;end if (v102==(0 -0)) then v103=0 + 0;v104=nil;v102=1 + 0;end end end break;end if (v59==(1 -0)) then v62=nil;v63=nil;v59=2 + 0;end if (v59~=2) then else v64=nil;v65=nil;v59=8 -5;end if (v59~=0) then else v60=0;v61=nil;v59=1;end end break;end if (2~=v58) then else v63=nil;v64=nil;v58=3;end if (v58==0) then v59=0 -0;v60=nil;v58=2 -1;end if (v58~=3) then else v65=nil;v66=nil;v58=4;end if (1~=v58) then else v61=nil;v62=nil;v58=6 -4;end end break;end end end local function v34(v35,v36,v37)local v67=v35[1];local v68=v35[2];local v69=v35[3];return function(...)local v70=0;local v71;local v72;local v73;local v74;local v75;while true do if (v70==0) then v71=1;v72= -1;v70=1;end if (v70==3) then A,B=v32(v11(v75));if  not A[1] then local v92=0;local v93;while true do if (0==v92) then v93=v35[4][v71] or "?";error("Script error at ["   .. v93   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end break;end if (v70==1) then v73={...};v74=v12("#",...) -1;v70=2;end if (2==v70) then v75=nil;v75=function()local v82=v67;local v83=v68;local v84=v69;local v85=v32;local v86={};local v87={};local v88={};for v94=0 + 0,v74 do if (((6112 -(569 + 1325))>(1943 -876)) and (v94>=v84)) then v86[v94-v84]=v73[v94 + 1 + 0];else v88[v94]=v73[v94 + (1812 -(1020 + 791))];end end local v89=(v74-v84) + (1693 -(1482 + 210));local v90;local v91;while true do local v95=1688 -(134 + 1554);while true do if ((v95==(1043 -(995 + 48))) or (2399<869)) then local v101=0 + 0;while true do if ((((0 + 0) -0)==v101) or ((11623 -7577)<(1829 -(1500 + 20)))) then v90=v82[v71];v91=v90[1 + (0 -0)];v101=3 -2;end if ((v101==1) or ((6437 -3033)<=(758 + (3031 -(862 + 799))))) then v95=562 -(473 + 88);break;end end end if ((v95==1) or ((5375 -(968 + 58))<(2725 + 442 + 596))) then if (((10378 -7142)<=(2673 + 325 + 988)) and (v91<=(106 -81))) then if (((1163 + (5280 -(124 + 1666)))>(1302 -618)) and (v91<=((1349 -(130 + 16)) -(492 + 699)))) then if (((2571 + 1999)>(353 + 238)) and (v91<=((148 + 638) -(339 + 442)))) then if ((124<(12791 -(26716 -18468))) and (v91<=(4 -2))) then if ((v91<=(0 -0)) or ((625 -141)>=((29729 -18235) -7812))) then if ((4396>=(3399 -(1871 + (898 -(200 + 667))))) and v88[v90[961 -(421 + 538)]]) then v71=v71 + 1 + (922 -(729 + 193));else v71=v90[1 + 0 + 2];end elseif (((4592 -3286)>(2919 -(1528 + 281))) and (v91==(1 -0))) then v88[v90[1 + 1]]=v88[v90[3 + 0]] -v88[v90[1512 -(1418 + 90)]];else v37[v90[8 -5]]=v88[v90[1459 -(1366 + 91)]];end elseif (((1749 + 3047)>(1711 -740)) and (v91<=(1981 -(1849 + 129)))) then v88[v90[6 -4]]= not v88[v90[3]];elseif (((3725 -(358 + (2997 -(697 + 859))))>(756 -417)) and (v91==(3 + 1))) then v88[v90[2 -0]]=v34(v83[v90[3 + 0]],nil,v37);else local v144=0 -0;local v145;local v146;while true do if ((v144==(1 -(0 -0))) or ((511 + 1022)<=((177 + 563) -329))) then while true do if ((v145==(0 + 0)) or ((12837 -9268)<=(1016 -(112 + 579)))) then v146=v90[4 -(1 + 1)];v88[v146]=v88[v146](v13(v88,v146 + ((3 + 0) -2),v90[3 + 0]));break;end end break;end if ((v144==(1211 -(205 + 1006))) or ((13413 -9502)<1213)) then v145=0;v146=nil;v144=1;end end end elseif ((v91<=(1371 -(32 + 1331))) or ((4909 -3457)>=(1470 + (8342 -5191)))) then if ((v91<=(1307 -(820 + 462 + 19))) or (2845==(1420 + 2827))) then v88[v90[402 -(119 + 246 + 35)]]=v37[v90[(3108 -1672) -(45 + 1388)]];elseif ((3114<(5062 -(979 + 791))) and (v91==(10 -3))) then local v147=0 + (920 -(113 + 807));local v148;local v149;local v150;local v151;local v152;local v153;while true do if ((v147==(1 + 0)) or ((18239 -13709)<4507)) then local v241=0 -0;while true do if ((4514>=(421 + 958)) and (0==v241)) then v150=nil;v151=nil;v241=1 + 0;end if (((3057 -(64 + 341 + 589))==((7295 -(32 + 849)) -4351)) and ((1 + 0)==v241)) then v147=2 + (75 -(62 + 13));break;end end end if ((((40826 -26037) -10239)>(878 -((1793 -(712 + 952)) + 86))) and (v147==(0 + 0))) then local v242=1407 -(430 + 977);while true do if ((v242==(0 + 0)) or ((743 + 2181)<=(3185 -1986))) then v148=0 -0;v149=nil;v242=1 + 0;end if ((v242==1) or (((3226 + 1143) -2692)>(2667 -955))) then v147=1;break;end end end if (((626 + 2920)>2407) and (v147==(528 -((1337 -(1174 + 131)) + 493)))) then while true do if ((v148==(1700 -(426 + 1273))) or ((3701 -(181 + 1666))<=(612 + 416))) then local v261=0 + 0;local v262;while true do if (((646 -(332 + 314))==v261) or (3422<=(5414 -2862))) then v262=0;while true do if ((v262==(1750 -(814 + 936))) or ((7025 -4858)<(67 + 39 + 796))) then v151=v149 + (1696 -(743 + 282 + 669));v152={v88[v149](v88[v149 + 1],v88[v151])};v262=1 + 0;end if ((((684 -(105 + 222)) + 3904)>=(3841 -(408 + 501))) and (v262==(1 -0))) then v148=2;break;end end break;end end end if ((612<2595) and (v148==((742 -(184 + 556)) + 0))) then local v263=0;local v264;while true do if (((379 + 18)==397) and (v263==((2315 -(1192 + 534)) -(563 + 26)))) then v264=0;while true do if ((4221==(5651 -((2928 -(1657 + 93)) + 252))) and (v264==(2 -1))) then v148=2 + 1;break;end if (((4941 -1463)==(3812 -(243 + 91))) and (v264==(0 + 0))) then local v350=0 + 0;while true do if (((0 + 0)==v350) or (((5172 -(1160 + 729)) -((111 -36) + 305))<(1162 + 1575))) then for v381=(6 -3) -2,v150 do v88[v151 + v381]=v152[v381];end v153=v152[1263 -(1243 + 19)];v350=1;end if ((2388>=1014) and (v350==(1 -0))) then v264=(883 -(4 + 678)) -(17 + 183);break;end end end end break;end end end if ((v148==3) or ((12437 -(9518 -(197 + 1135)))==((3497 -2605) + 1760))) then if (v153 or ((5381 -(1085 + 178))==3770)) then local v321=0 -0;local v322;local v323;while true do if ((918<((3796 -736) + 974)) and (v321==(31 -(23 + 7)))) then while true do if (((58 + 887)<2047) and (v322==(64 -(42 + 22)))) then v323=0 -0;while true do if (((4044 -(192 + 340 + 219))==3293) and (v323==((410 -215) -(164 + 31)))) then v88[v151]=v153;v71=v90[14 -11];break;end end break;end end break;end if (((0 + 0)==v321) or ((3825 -(274 + 1414))>=(4595 -(1464 + (571 -256))))) then v322=924 -(816 + 108);v323=nil;v321=941 -(575 + 365);end end else v71=v71 + (1173 -(679 + 493));end break;end if ((0==v148) or ((2177 + 1575)>(18129 -13874))) then local v265=0;while true do if (((4345 -(590 + 434 + 75))>=(3559 -1258)) and (v265==((2 -1) -(0 + 0)))) then v148=1 -0;break;end if (((5047 -(352 + 443))>(380 -114)) and (v265==(0 -(1334 -(706 + 628))))) then local v327=0;while true do if (((1638 -(762 + 857))<=(4674 + 69)) and (v327==(0 -0))) then v149=v90[2 + 0];v150=v90[4];v327=2 -1;end if ((v327==(1845 -(701 + 1143))) or ((14384 -10510)<=2569)) then v265=1 + 0;break;end end end end end end break;end if ((v147==(3 -(1623 -(605 + 1017)))) or ((6063 -2463)<=(7215 -5014))) then local v243=0 + 0;while true do if ((v243==1) or (3073>((4701 + 4289) -5738))) then v147=3;break;end if (((797 + 2693)>(2637 -((644 -(120 + 338)) + 1697))) and (v243==(0 -0))) then v152=nil;v153=nil;v243=1 -0;end end end end else v36[v90[665 -(555 + 107)]]=v88[v90[2]];end elseif (((24 + 162 + 1177)==(651 + (1241 -(484 + 45)))) and (v91<=10)) then if (((545 + 3703)<(5475 -(7 + 496))) and (v91==(12 -(3 + 0)))) then v88[v90[2]]={};else local v157=0 + 0;local v158;local v159;while true do if (((2202 -1551)<=(814 + 4102)) and (v157==0)) then v158=0 + 0;v159=nil;v157=1;end if (((16698 -12308)==(14184 -9794)) and ((3 -2)==v157)) then while true do if ((v158==(0 + 0)) or ((4443 -(188 + 988))==(1207 + 1017))) then v159=v90[140 -(99 + (121 -82))];v88[v159]=v88[v159](v13(v88,v159 + (2 -1),v72));break;end end break;end end end elseif (((2112 -(325 + 42))<=(10481 -5494)) and (v91>(17 -6))) then v88[v90[5 -3]]=v88[v90[2 + 1]] + v90[1290 -(576 + 710)];else local v161=0;local v162;local v163;local v164;while true do if ((v161==(1488 -(592 + 896))) or ((3666 -(207 + 850))>=((3083 -(24 + 665)) + 1208))) then v162=1098 -(846 + 91 + 161);v163=nil;v161=1 + (1436 -(505 + 931));end if ((v161==1) or ((25 + 29)>(3236 + 575))) then v164=nil;while true do if ((v162==(1 + 0)) or ((2904 + (713 -(38 + 175)))>(13587 -9738))) then while true do if ((v163==(0 + 0)) or ((5716 -4039)<1334)) then v164=v90[2];v88[v164]=v88[v164](v88[v164 + ((3206 -(12 + 1789)) -(1292 + 112))]);break;end end break;end if (((2249 -1420)<=(3925 -(684 + (2649 -(548 + 1147))))) and (v162==(0 -0))) then local v268=0 -0;while true do if ((4199<(11765 -7304)) and (v268==(381 -((1195 -(162 + 857)) + 204)))) then v162=1819 -(1324 + 494);break;end if ((v268==0) or ((974 -643)>(12357 -7808))) then v163=1130 -(608 + 522);v164=nil;v268=1 + 0;end end end end break;end end end elseif ((v91<=(418 -(290 + 110))) or (1463==(13350 -9084))) then if ((v91<=(59 -44)) or ((1483 -((296 -158) + 567))>=(2052 -(14 + 3)))) then if ((v91<=(25 -12)) or (3763>(3277 + 657))) then local v111=0;local v112;local v113;local v114;while true do if ((v111==0) or (((12713 -7833) -(1339 + 610))>=(6185 -(151 + 1587)))) then v112=0;v113=nil;v111=2 -1;end if (((2870 -(388 + (2901 -(328 + 1499))))>=(2564 -(1153 + 675))) and (v111==(1 + 0))) then v114=nil;while true do if ((v112==0) or ((2875 + 1724)<=(5774 -(679 + 1017)))) then local v247=0;while true do if (((3067 + 1686)==(13288 -(9600 -(892 + 173)))) and (v247==(1 + 0))) then v112=2 -1;break;end if (((3363 -1808)<=(2791 -(197 + 73))) and (((2020 -513) -(353 + 1154))==v247)) then v113=0;v114=nil;v247=335 -(66 + 268);end end end if ((((933 + 9429) -7570)<=(1414 + 1623)) and ((2 -1)==v112)) then while true do if (((477 -(293 + 184))==v113) or (4406<=3353)) then v114=v90[2 + 0];do return v13(v88,v114,v72);end break;end end break;end end break;end end elseif ((v91==((1732 -(261 + 1469)) + 12)) or ((15468 -11726)==(3168 + 176))) then local v165=0;local v166;local v167;local v168;local v169;while true do if (((1471 -(962 + 509))==v165) or (650>=(3737 -(488 + 7)))) then local v244=0 -0;while true do if ((4320==(4800 -(216 + 264))) and (v244==((2 -1) + 0))) then v165=1 + 0;break;end if ((v244==(1755 -(1261 + 494))) or ((2468 -1831)<=369)) then v166=0;v167=nil;v244=3 -2;end end end if ((v165==(2 -0)) or (3466==(2616 + 871))) then while true do if ((v166==(2 -(0 + 0))) or (3828<2814)) then for v296=1 + 0,v90[10 -6] do local v297=(473 -(175 + 298)) -0;local v298;local v299;while true do if ((3280<=((6081 -(718 + 123)) -((343 -183) + 440))) and (v297==(526 -(321 + 205)))) then v298=0;v299=nil;v297=1;end if ((4518>(438 + 2052)) and (v297==((4039 -2293) -(1336 + 409)))) then while true do if ((v298==1) or ((1163 + 3809)<=(6589 -3790))) then if ((v299[1]==(86 -55)) or ((1369 + 552)<(175 + 62))) then v169[v296-1]={v88,v299[1567 -(944 + 620)]};else v169[v296-(2 -1)]={v36,v299[10 -7]};end v87[ #v87 + 1]=v169;break;end if ((v298==((0 + 0) -0)) or ((4238 -(33 + 471))<(126 + 3212))) then local v358=1765 -(656 + 1109);while true do if ((((1011 + 5207) -((1801 -(821 + 53)) + 381))==(1909 + 3001)) and (v358==(0 + 0))) then v71=v71 + (4 -3);v299=v82[v71];v358=2 -1;end if ((1==v358) or ((5619 -(341 + (2766 -(262 + 1555))))==(1318 -557))) then v298=1;break;end end end end break;end end end v88[v90[2 + 0]]=v34(v167,v168,v37);break;end if ((v166==1) or ((2262 -1600)>=(3615 -2060))) then local v270=(206 + 200) -(274 + 132);local v271;while true do if ((2676>=(50 + 838)) and (v270==(0 -(0 -0)))) then v271=0;while true do if ((v271==((0 -0) -0)) or ((2097 -(465 + 200))>(4003 -(97 + 571)))) then local v353=0 + 0;while true do if (((1147 -(223 + 233))==(398 + 293)) and (v353==(141 -(8 + 133)))) then v169={};v168=v10({},{__index=function(v371,v372)local v385=(0 -0) + 0;local v386;local v387;while true do if ((v385==1) or (1307==1543)) then while true do if ((v386==0) or ((2473 -(21 + 330))<=1765)) then local v408=1809 -(1192 + 617);local v409;while true do if ((v408==(0 + 0)) or ((1790 -1408)>(2291 -(1202 + (1916 -(746 + 1016)))))) then v409=0 -0;while true do if (((5535 -(608 + 5))==(3119 + 1803)) and (v409==((0 + 0) -0))) then local v415=0;while true do if ((4693>(69 + 765)) and ((0 -(1831 -(1566 + 265)))==v415)) then v387=v169[v372];return v387[2 -1][v387[504 -(289 + 213)]];end end end end break;end end end end break;end if ((3427>(2510 -(1718 + 239))) and (v385==((347 + 126) -(380 + 93)))) then local v397=0 + 0;while true do if ((((9703 -(151 + 1733)) -5153)<4402) and (((3351 -1536) -(1677 + 137))==v397)) then v385=1;break;end if ((v397==((0 -0) -0)) or ((4791 -(221 + 137))<(3360 -1329))) then v386=137 -(5 + 132);v387=nil;v397=1 -(0 -0);end end end end end,__newindex=function(v371,v372,v373)local v388=0 -0;local v389;local v390;while true do if ((v388==(1571 -(580 + 991))) or ((89 + 5)>(126 + 971 + 766 + 264))) then v389=0 + 0;v390=nil;v388=(1850 -(1436 + 413)) + 0;end if (((473 + 102)<=(1301 -284)) and ((1 + 0)==v388)) then while true do if ((v389==(483 -(293 + 190))) or (2310<=(281 + 3))) then v390=v169[v372];v390[1 + 0][v390[(290 + 124) -(353 + 59)]]=v373;break;end end break;end end end});v353=2 -1;end if ((2<(3183 -2020)) and (1==v353)) then v271=(2806 -916) -(287 + 1602);break;end end end if ((v271==(1 + 0)) or ((4750 -(7 + 19))<=(481 -196))) then v166=2 + 0;break;end end break;end end end if ((v166==(0 -0)) or ((33 + 201)>494)) then local v272=0 + 0 + 0;local v273;while true do if ((v272==0) or (((18467 -4798) -10555)>=(10036 -6611))) then v273=0;while true do if (((11626 -8815)==((4756 -2806) + 861)) and (v273==((1616 -(1068 + 547)) + 0))) then v166=1597 -(1267 + 329);break;end if ((0==v273) or (((16540 -5174) -8579)<=2166)) then local v354=0 -0;while true do if ((v354==(1661 -(807 + 853))) or (2213<=1801)) then v273=742 -(207 + 534);break;end if (((2557 -(639 + 344 + 249))<=3729) and (v354==(1390 -(120 + 1270)))) then v167=v83[v90[1 + 2]];v168=nil;v354=1;end end end end break;end end end end break;end if ((v165==(1 + 0 + 0)) or (((7711 -2978) -3407)>=(5532 -(142 + 1694)))) then local v245=(3868 -(403 + 1483)) -(1719 + 263);while true do if ((v245==(1 -0)) or ((48 + 1049)>=2605)) then v165=7 -5;break;end if ((v245==(517 -(417 + 100))) or ((999 + 1044 + 449)<(174 + (2354 -1495)))) then v168=nil;v169=nil;v245=920 -(478 + 441);end end end end else do return v88[v90[2]];end end elseif (((3045 -2408)<=(1940 -1190)) and (v91<=(12 + 4))) then v88[v90[2 + 0]]=v90[(1222 -(543 + 668)) -8];elseif ((331==(703 -372)) and (v91==(2 + 15))) then v88[v90[7 -5]][v90[3]]=v90[1 + 3];elseif (((2547 -(549 + 614))<3443) and (v88[v90[1693 -(1401 + 290)]]~=v88[v90[1209 -(500 + 705)]])) then v71=v71 + 1 + (0 -0);else v71=v90[1296 -(978 + 315)];end elseif ((((779 + 3459) -1826)>=(145 + 597)) and (v91<=(2 + 19))) then if (((5260 -(1144 + 123))>(1236 -((29 -17) + (2098 -(1420 + 452))))) and (v91<=((25 -18) + 12))) then local v117=0;local v118;local v119;while true do if ((v117==(1905 -(1161 + 743))) or ((3789 -(127 + 1779))>=(1989 + 213))) then while true do if ((v118==(1262 -(1182 + 80))) or (3955<=(2040 -((1231 -701) + 21)))) then v119=v90[9 -7];v88[v119]=v88[v119]();break;end end break;end if (((2115 -854)>(285 + 5)) and (v117==0)) then v118=0;v119=nil;v117=107 -(55 + 51);end end elseif ((v91>(978 -(834 + (537 -413)))) or ((3330 -(136 + 61))<(1352 + 892))) then local v172=227 -(86 + (314 -173));local v173;local v174;local v175;while true do if (((2625 -752)<=4781) and (v172==(0 -0))) then v173=0 + 0;v174=nil;v172=622 -((1924 -(1689 + 53)) + 439);end if (((1573 + 588)<=(569 + 1645)) and (v172==(1999 -(1660 + 338)))) then v175=nil;while true do if (((1515 -(1333 + (448 -267)))==v173) or ((1772 -1126)>(1190 + 460))) then for v300=v174 + (1 -0),v90[1 + 0 + 2] do v7(v175,v88[v300]);end break;end if ((3691>(4688 -((1280 -289) + 742))) and (v173==(0 -0))) then v174=v90[196 -(175 + (1488 -(334 + 1135)))];v175=v88[v174];v173=1 + 0;end end break;end end elseif (((2822 -(269 + 977))<=(6207 -(1666 + 2827))) and (v90[1 + 1]==v88[v90[13 -9]])) then v71=v71 + 1 + 0;else v71=v90[601 -(233 + 365)];end elseif ((v91<=23) or ((2297 + 424)==(2100 + 2846))) then if (((5279 -(485 + 198))<(8536 -3697)) and (v91==22)) then if ((((7469 -5725) -(296 + 30))<4554) and (v88[v90[2 + 0]]<v88[v90[4 + 0]])) then v71=v71 + 1;else v71=v90[3];end else v88[v90[2]]=v88[v90[1821 -(1606 + 212)]] + v88[v90[1579 -(679 + 896)]];end elseif ((v91==((411 -(189 + 193)) -5)) or ((3644 -(195 + 374))<=(3202 -2040))) then if (((2675 -(449 + 694))<(5585 -1622)) and (v88[v90[5 -3]]<v90[1 + 3])) then v71=v71 + (855 -(823 + 31));else v71=v90[3];end else v71=v90[(493 -207) -(50 + 233)];end elseif (((3357 -(240 + (4679 -3006)))<1559) and (v91<=((56 + 35) -53))) then if ((v91<=(93 -62)) or ((4242 -(311 + 443))<902)) then if ((v91<=(9 + 19)) or ((4590 -3149)>2802)) then if ((v91<=26) or ((5604 -((2666 -1034) + 241))>3932)) then v88[v90[109 -(84 + 23)]]=v36[v90[3]];elseif ((v91==(78 -51)) or ((115 + 1595 + 2505)==(1824 -1181))) then v88[v90[1 + 1]][v90[3]]=v88[v90[1832 -(1268 + 560)]];else local v180=1292 -(433 + (2318 -(1363 + 96)));local v181;local v182;while true do if ((v180==(1585 -(1526 + (1141 -(208 + 874))))) or (4163==(2327 + 46 + 185))) then v181=0 + 0;v182=nil;v180=1 -0;end if (((10258 -6088)>=(88 + (980 -689))) and (v180==(1 + 0))) then while true do if (((3615 -2071)==(2869 -(246 + (3815 -2736)))) and (v181==(0 + 0))) then v182=v90[3 -1];v88[v182](v13(v88,v182 + (3 -2),v90[1 + 2]));break;end end break;end end end elseif ((v91<=(1040 -(793 + (848 -630)))) or ((2255 + 1184)<(1194 + 97))) then local v122=652 -(28 + 624);local v123;local v124;local v125;local v126;local v127;while true do if (((14452 -10573)>=(197 + 534)) and ((3 -2)==v122)) then v125=nil;v126=nil;v122=1126 -(272 + 111 + 741);end if ((3828<=(5445 -(703 + 606))) and (2==v122)) then v127=nil;while true do if ((v123==(1872 -((3955 -2657) + 574))) or (4820==(18430 -13633))) then local v250=584 -(372 + 212);while true do if (((1 + 0)==v250) or (543>(612 + 1221))) then v123=1 + 0;break;end if ((v250==(901 -(850 + 51))) or ((1339 -821)>(3057 -(1806 -(231 + 539))))) then v124=v90[1 + (406 -(115 + 290))];v125,v126=v85(v88[v124](v88[v124 + 1 + 0]));v250=1 -(0 + 0);end end end if ((4412>=(12239 -9017)) and (v123==((199 -(131 + 67)) + 0))) then local v251=0 -0;while true do if (((267 -(130 + 136))==v251) or ((1041 + 1541)<=(3668 -(934 + 257)))) then v123=2 + 0;break;end if (((5540 -(59 + 694))<4951) and (v251==(0 -0))) then v72=(v126 + v124) -(900 -((2463 -(984 + 648)) + 68));v127=1672 -(1558 + 114);v251=1157 -(450 + 706);end end end if (((1733 + 878)==(9651 -7040)) and (v123==2)) then for v255=v124,v72 do local v256=0;local v257;while true do if ((v256==0) or (2885==(361 -156))) then v257=0 + 0;while true do if ((v257==(0 + 0 + 0)) or ((809 + 2477)==2331)) then v127=v127 + (1618 -(1303 + 314));v88[v255]=v125[v127];break;end end break;end end end break;end end break;end if (((0 -0)==v122) or ((158 + 348)==(4186 -(401 + 483)))) then v123=0 -0;v124=nil;v122=1;end end elseif ((v91>(19 + 11)) or (((3174 -(547 + 61)) + 533)>((903 + 3484) -(130 + 1147)))) then v88[v90[2]]=v88[v90[1 + 2]];else v88[v90[4 -2]]=v88[v90[858 -(325 + 530)]][v88[v90[564 -(220 + 340)]]];end elseif (((4783 -(500 + 1236))>(3837 -(145 + 1114))) and (v91<=(57 -23))) then if ((((14954 -(282 + 4)) -10263)<(1093 + (6964 -3317))) and (v91<=(24 + 8))) then local v128=0 + 0;local v129;local v130;local v131;while true do if (((5302 -3053)<=4335) and ((0 + 0)==v128)) then v129=910 -(120 + 790);v130=nil;v128=1954 -(1361 + 592);end if ((1==v128) or ((999 -(129 + 751))>=4555)) then v131=nil;while true do if (((3704 -2308)==(2305 -909)) and (v129==((1 + 2) -(2 + 0)))) then for v258=v130 + (2 -1),v90[(2732 -1159) -(1403 + 166)] do v131=v131   .. v88[v258];end v88[v90[5 -3]]=v131;break;end if ((((1493 -590) + 534)<3827) and (v129==0)) then local v253=0 -0;while true do if ((((815 -(349 + 459)) + 409)<3656) and ((2 -1)==v253)) then v129=364 -(48 + 315);break;end if ((v253==(1926 -(841 + 1085))) or ((5803 -(542 + 1427))==(3116 -575))) then v130=v90[1 + 2];v131=v88[v130];v253=(9 -5) -3;end end end end break;end end elseif ((v91>((124 -47) -44)) or (241==(17230 -12727))) then local v187=0 + 0;local v188;local v189;local v190;while true do if ((v187==1) or ((73 + (481 -(321 + 103)))>=(441 + 389))) then v190=nil;while true do if (((9673 -7223)>1722) and (v188==((2 + 0) -1))) then for v304=v189 + (1 -0),v72 do v7(v190,v88[v304]);end break;end if ((0==v188) or (4460<=(9992 -6471))) then local v277=0;while true do if (((3 -2)==v277) or ((97 -(26 + 4))>=1961)) then v188=1;break;end if ((v277==((1944 -(775 + 711)) -(112 + 346))) or ((10557 -5650)==(1611 + 2966))) then v189=v90[2 + 0];v190=v88[v189];v277=1394 -(152 + 1241);end end end end break;end if (((0 + 0)==v187) or (((10297 -(627 + 275)) -5072)<=(688 + 913))) then v188=0 + 0 + 0;v189=nil;v187=1;end end elseif ((((3180 -(158 + 66)) + 1391)>=(275 + 1596)) and (v88[v90[5 -3]]==v88[v90[(4 + 0) -0]])) then v71=v71 + 1 + 0;else v71=v90[515 -(415 + 97)];end elseif (((5143 -3106)<4776) and (v91<=(128 -92))) then if ((v91==(158 -123)) or ((4326 -(409 + 439))<=2823)) then local v191=1479 -(583 + 896);local v192;local v193;local v194;local v195;local v196;while true do if (((2701 -(355 + 8 + 385))==(2800 -(651 + 196))) and (v191==2)) then v196=nil;while true do if (((829 + 2990 + 338)>(586 + 3265)) and (v192==(464 -(463 + 1)))) then v193=v90[3 -1];v194,v195=v85(v88[v193](v13(v88,v193 + (910 -(336 + 573)),v90[2 + 1])));v192=1292 -(759 + 532);end if ((v192==(1889 -(913 + (3052 -2077)))) or ((776 + 235)==226)) then local v279=0;while true do if (((5091 -(189 + 525))>(383 + 1952)) and (v279==0)) then v72=(v195 + v193) -1;v196=0 + 0 + 0;v279=1587 -(1212 + 374);end if ((v279==(313 -(223 + 89))) or ((29 + 278)<(347 -(22 + (262 -79))))) then v192=4 -(1618 -(255 + 1361));break;end end end if ((v192==(2 + 0)) or (((7596 -4107) -(452 + 58))>=4615)) then for v305=v193,v72 do local v306=0 -0;local v307;while true do if (((6487 -2123)>=(3341 -2149)) and ((1564 -(317 + 1247))==v306)) then v307=1216 -(1126 + 90);while true do if ((v307==(1284 -((1152 -656) + 788))) or (2763==(3535 -(32 + 595)))) then v196=v196 + (63 -(54 + 8));v88[v305]=v194[v196];break;end end break;end end end break;end end break;end if ((4507>=(3707 -((2450 -(992 + 527)) + 261))) and (((0 -0) -0)==v191)) then v192=0;v193=nil;v191=1515 -(322 + (1936 -(279 + 465)));end if (((8947 -(6589 -(32 + 179)))>1304) and (v191==(4 -3))) then v194=nil;v195=nil;v191=2;end end else v88[v90[2]]=v88[v90[5 -2]][v90[4 -0]];end elseif ((v91>(126 -89)) or ((2990 + 1885)<((3246 -(312 + 883)) -(35 + 1721)))) then local v199=(1064 -(950 + 114)) + (787 -(6 + 781));local v200;local v201;local v202;while true do if (((1 + 0)==v199) or ((2766 + 1211)<=(4610 -2846))) then v202=nil;while true do if ((v200==1) or (4011>=(1005 + 3492))) then v88[v201 + 1 + 0 + 0]=v202;v88[v201]=v202[v90[1 + 3]];break;end if (((5013 -(1187 + 199))==3627) and (v200==(0 + 0))) then local v283=0;while true do if ((v283==0) or ((347 -229)>3413)) then v201=v90[5 -3];v202=v88[v90[3]];v283=1;end if ((1==v283) or ((5723 -(210 + 772))<=(2868 -(179 + 162)))) then v200=(1220 -(802 + 406)) -(5 + 6);break;end end end end break;end if (((4412 -((1991 -(593 + 653)) + 704))<=(14097 -9721)) and (v199==(0 + 0))) then v200=1445 -(829 + 616);v201=nil;v199=1;end end else local v203=980 -((371 -142) + 751);local v204;local v205;local v206;while true do if (((1283 + 432)==(2365 -650)) and (v203==(0 + 0 + 0))) then local v246=0;while true do if ((3616<(5477 -(149 + 1330))) and (v246==1)) then v203=3 -2;break;end if ((v246==((0 -0) + 0)) or (1536==(1313 + 381))) then v204=0 -0;v205=nil;v246=1;end end end if (((8352 -5215)>(3429 -(498 + 223))) and (v203==1)) then v206=nil;while true do if ((v204==(1 + 0)) or ((650 + 2826)<=(3871 -1616))) then for v308=1, #v87 do local v309=184 -(125 + 59);local v310;while true do if (((4092 -(1028 + 796))>(2927 -1422)) and (v309==(0 -0))) then v310=v87[v308];for v344=0, #v310 do local v345=0;local v346;local v347;local v348;local v349;while true do if ((15==(1978 -(1351 + 612))) and (v345==(1 + 1))) then while true do if (((225 -(10 + 214))==v346) or ((12653 -8252)==(11839 -7097))) then v349=v347[2 -0];if ((1987==((5487 -(113 + 73)) -(4504 -(887 + 303)))) and (v348==v88) and (v349>=v205)) then local v398=0;while true do if (((14527 -11375)>(240 + 464)) and (v398==(0 -0))) then v206[v349]=v348[v349];v347[1 -0]=v206;break;end end end break;end if (((1706 + 1465)>=(3797 -(390 + 637))) and (v346==(0 + 0))) then local v394=0;while true do if (((1615 -(5 + 7))<=(9911 -(7984 -(1164 + 530)))) and (v394==(2 -1))) then v346=1 + 0 + 0;break;end if (((1476 + (2194 -(1172 + 554)))>=1585) and (v394==(0 -0))) then v347=v310[v344];v348=v347[1 + 0 + 0];v394=1;end end end end break;end if ((3686>=(2972 -1783)) and (v345==1)) then v348=nil;v349=nil;v345=(3178 -(966 + 506)) -(749 + 955);end if (((4982 -1785)<4231) and (v345==(0 -0))) then v346=0 + 0;v347=nil;v345=1753 -(172 + 1580);end end end break;end end end break;end if ((v204==(0 + 0)) or ((1506 + 2618)<2879)) then local v284=0;local v285;while true do if (((670 + 495)<1422) and (v284==(725 -(57 + 668)))) then v285=0 + 0;while true do if ((v285==(0 + 0)) or ((523 + 1994)>=(3013 -(128 + 300)))) then local v355=0 + 0;while true do if (((5125 -(1721 + 124))==((5217 -2973) + 1036)) and (v355==(3 -2))) then v285=2 -1;break;end if (((3085 -1903)==(1593 -411)) and (v355==(0 + 0))) then v205=v90[2 -0];v206={};v355=1;end end end if (((1316 -(62 + 427 + 299))<=(3997 -(1922 + 13))) and (v285==1)) then v204=3 -2;break;end end break;end end end end break;end end end elseif ((430<=(191 + (3532 -(30 + 1478)))) and (v91<=(1175 -(334 + 797)))) then if (((3440 -(84 + 928))<(15650 -11478)) and (v91<=(17 + 24))) then if ((1596<(5033 -(223 + 71))) and (v91<=39)) then v88[v90[1420 -(1396 + 22)]]=v90[1 + 2]~=0;elseif (((1613 + 719)>=(2065 -1014)) and (v91>(26 + 14))) then local v207=0 + 0;local v208;local v209;while true do if ((v207==(4 -3)) or ((2325 -(324 + 61))<=(1594 -1127))) then while true do if (((3557 -2019)<(2629 -(34 + 317))) and ((0 -0)==v208)) then local v286=0;while true do if ((v286==(0 -0)) or ((4469 -3140)>=(4190 -1720))) then v209=v90[2];v72=(v209 + v89) -(781 -(743 + (99 -62)));v286=1182 -(475 + 706);end if (((428 + 333)>(2338 -((2733 -(351 + 933)) + (1029 -(701 + 35))))) and ((1 + 0)==v286)) then v208=1754 -(287 + 1466);break;end end end if ((v208==(1 + 0)) or ((2719 -(451 + 908))>=((4849 + 9862) -10611))) then for v311=v209,v72 do local v312=0;local v313;local v314;while true do if ((v312==(1 -0)) or ((3073 + 1374)<(3505 -1809))) then while true do if (((0 + 0)==v313) or ((3034 -(970 + 464))>(7803 -4055))) then v314=v86[v311-v209];v88[v311]=v314;break;end end break;end if (((5242 -3844)<2545) and ((1943 -(1390 + (2230 -1677)))==v312)) then v313=0 + 0;v314=nil;v312=27 -((1957 -(383 + 1564)) + 16);end end end break;end end break;end if ((v207==(0 + 0)) or ((3263 + 172)>(21141 -16911))) then v208=0 -0;v209=nil;v207=2 -1;end end else local v210=0 + 0;local v211;local v212;local v213;local v214;while true do if ((v210==(2 -1)) or ((9439 -6769)<=151)) then v213=nil;v214=nil;v210=824 -(146 + 676);end if ((v210==(1573 -(260 + 1311))) or ((7176 -4238)<=1529)) then while true do if (((12256 -8332)==(2721 + 1203)) and (v211==(1 -(0 -0)))) then v214=(0 + 0) -0;for v315=v212,v90[1 + 3 + 0] do local v316=753 -(476 + 277);local v317;while true do if (((3971 -2050)==((2506 -(550 + 843)) + 808)) and (v316==(0 -0))) then v317=1735 -(599 + 1136);while true do if (((0 -0)==v317) or ((2275 -632)<=(2220 -(902 + 256)))) then v214=v214 + (1240 -(18 + 1221)) + 0;v88[v315]=v213[v214];break;end end break;end end end break;end if ((v211==(0 -0)) or ((682 + (2491 -(449 + 376)))<=(4144 -1934))) then local v287=0;while true do if ((v287==(1 + 0)) or ((4781 -1421)<=(138 + 2996))) then v211=1 -(0 + 0);break;end if (((4892 -(303 + 80))==(4971 -(108 + 354))) and (v287==(0 + 0 + 0))) then v212=v90[1981 -(1097 + 882)];v213={v88[v212](v13(v88,v212 + 1 + 0,v72))};v287=2 -1;end end end end break;end if ((v210==(0 -0)) or ((33 + 55)>782)) then v211=(0 -0) + 0;v212=nil;v210=1333 -(156 + 1176);end end end elseif ((2306>=((7392 -5533) -1453)) and (v91<=(30 + 12))) then local v133=0 + 0;local v134;local v135;while true do if ((v133==1) or ((2126 + 714)==(2602 -(420 + (1007 -(325 + 544)))))) then while true do if ((v134==((534 -(367 + 167)) + 0)) or ((3484 -2288)==(2451 -(441 + 1054)))) then v135=v90[5 -(2 + 1)];do return v88[v135](v13(v88,v135 + 1,v72));end break;end end break;end if ((v133==(1797 -(501 + 1235 + 61))) or ((13091 -8475)<=(3360 -(715 + 238)))) then v134=0 -0;v135=nil;v133=1059 -((587 -(146 + 10)) + 627);end end elseif ((v91==43) or ((76 + 603)>=((212 -(23 + 15)) + 3598))) then if ((v88[v90[354 -(149 + 203)]]==v90[7 -3]) or ((1805 -479)>3194)) then v71=v71 + 1 + 0;else v71=v90[3];end else v88[v90[3 -1]]=v88[v90[2 + (1032 -(515 + 516))]] * v88[v90[4 + 0]];end elseif ((v91<=(864 -(372 + 445))) or (3614<=(4470 -1923))) then if (((6001 -(346 + 1519))>(1070 + 1439)) and (v91<=(62 -(17 + 0)))) then do return;end elseif ((((3212 -(1135 + 427)) + 566)<(2671 -(117 + 204 + 16))) and (v91==(36 + 10))) then local v216=805 -(362 + 443);local v217;local v218;while true do if (((632 -(389 + 9))==234) and (v216==0)) then v217=0 -0;v218=nil;v216=1245 -(1224 + 20);end if ((2571>(1957 -1194)) and ((1 -0)==v216)) then while true do if (((319 + 72)<=1706) and (v217==(0 -(0 -0)))) then v218=v90[5 -3];do return v13(v88,v218,v218 + v90[3 + 0]);end break;end end break;end end else local v219=0 + 0;local v220;local v221;while true do if ((2690==(4876 -(2338 -(68 + 84)))) and (v219==(1292 -(643 + 648)))) then while true do if ((3254>=(2281 + 491)) and (v220==(0 + 0))) then v221=v90[1121 -(431 + 688)];v88[v221](v88[v221 + (1 -(0 -0))]);break;end end break;end if ((v219==(0 + 0)) or ((2998 -(713 + 887))==(3672 -(309 + 949)))) then v220=198 -((285 -102) + 15);v221=nil;v219=560 -(17 + 542);end end end elseif ((v91<=(38 + 11)) or (1513>(3575 -(586 + 1038)))) then if ((v91>(38 + 10)) or (2295<=(166 + 1245))) then if ( not v88[v90[2 -0]] or ((253 + 73)>(5073 -(984 + 379)))) then v71=v71 + (3 -2);else v71=v90[8 -(15 -10)];end elseif ((v88[v90[1514 -(1452 + 60)]]~=v90[3 + 0 + 1]) or ((10946 -7702)<=(3272 -(1413 + 111)))) then v71=v71 + (1 -0);else v71=v90[5 -2];end elseif ((((5344 -1395) -(701 + 420))<(801 + (4529 -(173 + 1090)))) and (v91==(513 -(365 + 98)))) then for v227=v90[4 -2],v90[1594 -(175 + (2056 -(614 + 26)))] do v88[v227]=nil;end else local v222=938 -(146 + 792);local v223;local v224;local v225;local v226;while true do if (((1064 + 290)>=(1633 -738)) and (v222==0)) then v223=0 -0;v224=nil;v222=(319 -(80 + 238)) + 0;end if (((3103 + 12)==(3552 -(395 + 42))) and (v222==((1 -0) -(0 -0)))) then v225=nil;v226=nil;v222=443 -(280 + 161);end if (((6198 -(11398 -6883))==(3084 -(751 + 650))) and (v222==(7 -5))) then while true do if ((v223==(0 + 0)) or ((576 + 2916)>=(5525 -(58 + 911)))) then v224=v90[2];v225=v88[v224];v223=(9 -5) -3;end if (((440 -(414 + 25))==v223) or ((7075 -3877)<=65)) then v226=v90[10 -7];for v318=1,v226 do v225[v318]=v88[v224 + v318];end break;end end break;end end end v71=v71 + 1;break;end end end end;v70=3;end end end;end return v34(v33(),{},v17)(...);end vv9(),...);end
